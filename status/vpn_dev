#!/bin/bash
RED='\033[0;31m'
ORANGE='\033[0;33m'
GREEN='\033[0;32m'
NC='\033[0m'

### binary select ###
if   [[ $2 == "wireguard" ]]; then
        binary="wireguard"
elif [[ $2 == "openvpn" ]]; then
        binary="openvpn"
elif [[ $2 == "killswitch" ]]; then
        binary="tnl_ks"
fi
### DNS SETTINGS 
select_dns1() {
clear
echo -e "${ORANGE}PRIMARY DNS${NC}"
echo "1) cloudflare     1.1.1.1"
echo "2) quad9          9.9.9.9"
echo "3) google         8.8.8.8"
echo "4) adguard        176.103.130.130"
read  -p "select primary dns: " bqdl </dev/tty
case $bqdl in
[1]*)
dns1=1.1.1.1
;;
[2]*)
dns1=9.9.9.9
;;
[3]*)
dns1=8.8.8.8
;;
[4]*)
dns1=176.103.130.130
;;
*)
echo "none selected"
exit 0
;;
esac
}
select_dns2() {
echo ""
echo -e "${ORANGE}Secondary DNS${NC}"
echo "1) cloudflare     1.0.0.1"
echo "2) quad9          149.112.112.112"
echo "3) google         8.8.4.4"
echo "4) adguard        176.103.130.131"
read  -p "select secondary dns: " bqdl </dev/tty
case $bqdl in
[1]*)
dns2=1.0.0.1
;;
[2]*)
dns2=149.112.112.112
;;
[3]*)
dns2=8.8.4.4
;;
[4]*)
dns2=176.103.130.131
;;
*)
echo "none selected"
exit 0
;;
esac
}

push_dns() {
chattr -i /etc/resolv.conf
rm /etc/resolv.conf
cat <<EOF > /etc/resolv.conf
nameserver $dns1
nameserver $dns2
EOF

chattr +i /etc/resolv.conf

echo -e "${ORANGE}dns set: nameserver $dns1 nameserver $dns2${NC}"
}
### status ###
interface_check() {
        clear
        echo ""
        echo -e "${ORANGE}VPN status check${NC}"
        echo ""
        echo -e "${ORANGE}Interface status check${NC}"

        iface=$(ip -o link show | awk -F': ' '{print $2}' | grep wg; ip -o link show | awk -F': ' '{print $2}' | grep tun)
        if  [ -n "$iface" ]; then
                echo -e "${GREEN} $iface VPN Interface is up${NC}"
        else
                echo -e "${RED} $iface VPN Interface is down${NC}"
        exit 0
        fi
}
link_check(){
        echo -e "${ORANGE}$iface link check${NC}"
        link=$( ping -c 3 -I $iface 1.0.0.1 | grep time | grep ttl | wc -l )
        if [ $link -eq 0 ]; then
                echo -e "${RED} $iface VPN link check failed${NC}"
                exit 0
        else
                echo -e "${GREEN} $iface VPN link check success${NC}"
        fi
}

location_check(){
        echo -e "${ORANGE}$iface VPN location check${NC}"
        vpn_ip=$(curl -s ipinfo.io/ip)
        echo -e "${GREEN} VPN IP:       "$vpn_ip"${NC}"
        vpn_country=$(curl -s ipinfo.io/country)
        echo -e "${GREEN} VPN Country:  "$vpn_country"${NC}"
        vpn_city=$(curl -s ipinfo.io/city)
        echo -e "${GREEN} VPN City:     "$vpn_city"${NC}"
}
ks_check(){ 
        echo -e "${ORANGE}$iface VPN killswitch check${NC}"
        check_ks=$(pgrep killswitch)
        if  [ -n  "$check_ks" ]; then
                echo -e "${GREEN} Killswitch is running.${NC}"
        else
                echo -e "${RED} Killswitch not running. Type "vpn enable killswitch" to enable${NC}"
        fi
}
case "$1" in
        setdns)
        select_dns1
        select_dns2
        push_dns
        ;;
        status)
        interface_check
        link_check
        location_check
        ks_check        
        ;;
        stop)
        vpn_stop
        ;;
        enable)
        vpn_enable
        ;;
        disable)
        vpn_disable
        ;;
        remove)
        vpn_remove
        ;;
        newconf)
        new_conf
        ;;
    *)
    echo "usage:"
    echo "vpn start wireguard|openvpn|killswitch">&2
    echo "vpn stop wireguard|openvpn|killswitch">&2
    echo "vpn enable wireguard|openvpn|killswitch">&2
    echo "vpn disable wireguard|openvpn|killswitch">&2
    echo "vpn remove wireguard|openvpn|killswitch">&2
    echo "vpn newconf wireguard|openvpn">&2
    echo "vpn status" >&2
    exit 1
   ;;
  esac
  exit 0

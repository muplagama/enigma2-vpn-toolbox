#!/bin/bash
RED='\033[0;31m'
ORANGE='\033[0;33m'
GREEN='\033[0;32m'
NC='\033[0m'
#by LouMu
### Preset ###
wg_menu_check() {
menu_check_av_wg=$(opkg list wireguard-tools | grep wireguard-tools)
        if  [ -n "$menu_check_av_wg" ]
                then
                        echo -e "${GREEN}1) WireGuard install                // opkg based systems ${NC}"
                        echo -e "${GREEN}2) WireGuard Killswitch             // opkg based systems ${NC}"
                else
                        echo -e "${RED}1) WireGuard install (not possible)    // opkg based systems${NC}"
                        echo -e "${RED}2) WireGuard Killswitch (not possible) // opkg based systems${NC}"
        fi
}
ovpn_menu_check() {
menu_check_av_ovpn=$(opkg list openvpn | grep openvpn)
        if  [ -n "$menu_check_av_ovpn" ]
                then
                        echo -e "${GREEN}4) OpenVPN install		       // opkg based systems${NC}"
                        echo -e "${GREEN}5) OpenVPN Killswitch (coming soon)  // opkg based systems${NC}"
                else
                        echo -e "${RED}4) OpenVPN install                      // opkg based systems${NC}"
                        echo -e "${RED}5) OpenVPN Killswitch (not possible)   // opkg based systems${NC}"
        fi
}


wg_av() {
check_install_wg=$(opkg list-installed wireguard-tools | grep wireguard-tools)
        if  [ -n "$check_install_wg" ]
                then
                        echo -e "${ORANGE}WireGuard installation already found!${NC}"
                else
                        check_wg_av=$(opkg list wireguard-tools | grep wireguard-tools)
                                if  [ -n "$check_wg_av" ]
                                        then
                                                echo -e "${GREEN}WireGuard installation possible!${NC}"
                                        else
                                                echo -e "${RED}Sorry! WireGuard installation impossible!${NC}"
                                fi
        fi
}
ovpn_av() {
check_install_ovpn=$(opkg list-installed openvpn | grep openvpn)
        if  [ -n "$check_install_ovpn" ]
                then
                        echo -e "${ORANGE}OpenVPN installation already found!${NC}"
                else
                        check_ovpn_av=$(opkg list openvpn | grep openvpn)
                                if  [ -n "$check_ovpn_av" ]
                                        then
                                                echo -e "${GREEN}OpenVPN installation possible!${NC}"
                                        else
                                                echo -e "${RED}Sorry! OpenVPN installation impossible!${NC}"
                                fi
        fi
}
my_header() {
        clear
	echo "+-+-+-+-+-+-+-+ +-+-+-+-+-+-+-+ +-+-+-+-+-+-+-+"
	echo "|E|n|i|g|m|a|2| |N|e|t|w|o|r|k| |T|o|o|l|b|o|x|"
	echo "+-+-+-+-+-+-+-+ +-+-+-+-+-+-+-+ +-+-+-+-+-+-+-+"
	echo "                                   by tnl.ninja"
        echo "                                               "
}
wrong_opt() {
        echo "Wrong option!"
        sleep 2
        clear
}
sys_update() {
        opkg update > /dev/null 2>&1
}

vpnstatus(){
	wget -O /bin/vpnstatus https://raw.githubusercontent.com/muplagama/enigma2-vpn-toolbox/main/status/vpnstatus
	chmod +x /bin/vpnstatus
}

### WireGuard ###
wg_proof_inst() {
        echo -e "${ORANGE}checking system compatibility...${NC}"
proof_wg_inst=$(opkg list wireguard-tools | grep wireguard-tools)
        if  [ -n "$proof_wg_inst" ]
                then
                        echo -e "${GREEN}...install WireGuard${NC}"
                        opkg install wireguard-tools
                else
                        echo -e "${RED}Sorry! WireGuard installation impossible!${NC}"
                        exit 0
        fi
}
wg_read_conf() {
echo "Pipe in wireguard config, or paste and it ctrl-d when done"
wgconf=$(cat)

cat <<EOF > /etc/wireguard/wg0.conf
${wgconf}
EOF
chmod 644 /etc/wireguard/wg0.conf
}
wg_trim_conf() {
sed -i '/DNS/d' /etc/wireguard/wg0.conf
sed -i 's/,.*//' /etc/wireguard/wg0.conf
sed -i 's/\/0/\/1/g' /etc/wireguard/wg0.conf
}
wg_start() {
        echo -e "${GREEN}...install update-rc.d${NC}"
        opkg install update-rc.d > /dev/null 2>&1
        echo -e "${GREEN}...create startscript${NC}"
        wget -O /etc/init.d/wireguard https://raw.githubusercontent.com/muplagama/enigma2-vpn-toolbox/main/rc/wireguard > /dev/null 2>&1
        echo -e "${GREEN}...enable startscript${NC}"
	chmod +x /etc/init.d/wireguard
        update-rc.d wireguard defaults
	sleep 1
        /etc/init.d/wireguard start
}
wg_check_connect() {
ping_check=$(ping -c 2 -I wg0 "1.1.1.1" | grep time)
        if  [ -n "$ping_check" ]
                then
                        echo -e "${GREEN}WireGuard is up${NC}"
			sleep 10
                else
                        echo -e "${RED}Error! WireGuard is down${NC}"
			sleep 10
        fi
}

### WireGuard Killswitch ###
wg_ks_download() {
check_wg_ks=$(opkg list-installed wireguard-tools | grep wireguard)
	if [ -n "$check_wg_ks" ]
		then
	        echo -e "${GREEN}...download files${NC}"
		sleep 1
		wget -O /etc/wireguard/killswitch.sh https://raw.githubusercontent.com/muplagama/enigma2-vpn-toolbox/main/wg_killswitch/killswitch.sh  > /dev/null 2>&1
		chmod +x /etc/wireguard/killswitch.sh
		wget -O /etc/init.d/killswitch https://raw.githubusercontent.com/muplagama/enigma2-vpn-toolbox/main/wg_killswitch/killswitch > /dev/null 2>&1
		chmod +x /etc/init.d/killswitch
		else
		echo -e "${RED}Error! No WireGuard installation found.. please install before!${NC}"
		sleep 5
		exit 0
	fi
}
enable_wg_ks() {
	echo -e "${GREEN}...enable autostart${NC}"
	sleep 2
	/etc/init.d/killswitch enable  > /dev/null 2>&1
}
check_wg_ks() {
	check_wg_ks_ps=$(pgrep killswitch.sh)
	if  [ -n  "$check_wg_ks_ps" ]
	then
        	echo -e "${GREEN}Success: Killswitch is running.${NC}"
        	sleep 5
	else
		echo -e "${RED}Error! Killswitch not running.${NC}"
		sleep 5
	fi
}


uninstall_wg_ks() {
        echo -e "${GREEN}...uninstall WireGuard killswitch${NC}"
        sleep 2
        /etc/init.d/killswitch uninstall  > /dev/null 2>&1
}
##### OpenVPN
ovpn_proof_inst() {
        echo -e "${ORANGE}checking system compatibility...${NC}"
proof_ovpn_inst=$(opkg list openvpn | grep openvpn)
        if  [ -n "$proof_ovpn_inst" ]
                then
                        echo -e "${GREEN}...install Openvpn${NC}"
                        opkg install openvpn
                else
                        echo -e "${RED}Sorry! Openvpn installation impossible!${NC}"
                        exit 0
        fi
}
ovpn_read_conf() {
clear
echo -e "${ORANGE}Pipe in OpenVPN config, or paste and it (push <ENTER> and ctrl-d when done)${NC}"
ovpnconf=$(cat)

cat <<EOF > /etc/openvpn/openvpn.conf
${ovpnconf}
EOF
sed -i '/auth-user-pass/d' /etc/openvpn/openvpn.conf
sed -i '/script-security/d' /etc/openvpn/openvpn.conf
sed -i '/update-resolv-conf/d' /etc/openvpn/openvpn.conf
sed -i '1a\auth-user-pass /etc/openvpn/auth_pass' /etc/openvpn/openvpn.conf
sed -i '1a\log /tmp/openvpn.log' /etc/openvpn/openvpn.conf
sed -i '1a\pull-filter ignore "route-ipv6"' /etc/openvpn/openvpn.conf
sed -i '1a\pull-filter ignore "ifconfig-ipv6"' /etc/openvpn/openvpn.conf

chmod 644 /etc/openvpn/openvpn.conf
}
ovpn_user_pass() {
clear
echo -e "${ORANGE}creating OpenVPN Login File${NC}"
echo ""
read -e -i "$openvpnuser" -p "Username: " openvpnuser </dev/tty
read -e -i "$openvpnpass" -p "Password: " openvpnpass </dev/tty

cat <<EOF > /etc/openvpn/auth_pass
${openvpnuser}
${openvpnpass}
EOF

chmod 644 /etc/openvpn/auth_pass
}


##### Dreambox VPN Manager
dreambox_install() {
dm_grep=$(cat /etc/hostname)
if [ $dm_grep = dreambox ]
        then
        echo "Installing Dreambox One Version"
	cd /tmp
	curl -o /tmp/enigma2-plugin-extensions-vpnmanager_1.2.0.deb -JLO https://github.com/muplagama/enigma2-vpn-toolbox/blob/main/deb/enigma2-plugin-extensions-vpnmanager_1.2.0.deb?raw=true
	apt-get update && dpkg -i /tmp/*.deb && apt-get -f install
	curl -o /tmp/WireGuardONE.zip -JLO https://github.com/muplagama/enigma2-vpn-toolbox/blob/main/deb/WireGuardONE.zip?raw=true
	unzip WireGuardONE.zip
	python /tmp/WireGuard/WireGuard.py
elif [ $dm_grep = DMTwo ]
        then
        echo "Installing Dreambox Two Version"
	cd /tmp
	curl -o /tmp/enigma2-plugin-extensions-vpnmanager_1.2.0.deb -JLO https://github.com/muplagama/enigma2-vpn-toolbox/blob/main/deb/enigma2-plugin-extensions-vpnmanager_1.2.0.deb?raw=true
	apt-get update && dpkg -i /tmp/*.deb && apt-get -f install
	curl -o /tmp/WireGuardTWO.zip -JLO https://github.com/muplagama/enigma2-vpn-toolbox/blob/main/deb/WireGuardTWO.zip?raw=true
	unzip WireGuardTWO.zip
	python /tmp/WireGuard/WireGuard.py
else
        echo "not installable on this system"
        exit 0
fi
}

mainmenu() {
my_header
wg_av
ovpn_av
echo -e ""
echo -e "##### Menu #####"
echo -e ""
wg_menu_check
echo -e "3) uninstall WireGuard Killswitch"
echo -e ""
ovpn_menu_check
echo -e ""
echo -e "6) VPN Manager + Wireguard - DM One/Two // TESTING"
echo -e "0) Exit"
echo -e ""
read -p "choose an Option: " main </dev/tty

case $main in
1)
        sys_update
        wg_proof_inst
        wg_read_conf
        wg_trim_conf
        wg_start
        wg_check_connect
	vpnstatus
        mainmenu
        ;;
2)
	wg_ks_download
	enable_wg_ks
	check_wg_ks
        mainmenu
        ;;
3)
	uninstall_wg_ks
	mainmenu
	;;
4)
	ovpn_proof_inst
	ovpn_read_conf
	ovpn_user_pass
	vpnstatus
	mainmenu
        ;;
5)
        mainmenu
        ;;
6)	
	dreambox_install
	mainmenu
	;;
0)
        echo "bye bye"
        exit 0
        ;;
*)
        wrong_opt
        mainmenu
        ;;

esac
}
mainmenu

#!/bin/bash
clear
####Interface whois ###
iface=$(ip -o link show | awk -F': ' '{print $2}' | grep -E  'wg|tun')
        if  [ -z "$iface" ]; then
                if [ -e /etc/wireguard/*conf ]; then
                        iface="wg"*
                elif [ -e /etc/openvpn/*.conf ]; then
                        iface="tun"*
                fi
        fi
###default_path
if [[ $iface == "wg"* ]]; then
        default_path="/etc/wireguard"
elif [[ $iface == "tun"* ]]; then
        default_path="/etc/openvpn"
fi
### Save default route ###
if  [ ! -e $default_path/route_default ]; then
        ip route show default | grep default > $default_path/route_default
        echo "$default_path/route_default NOW set"
        else
        echo "$default_path/route_default ALREADY set"
fi
### Grep VPN URL ###
if [[ $iface == "wg"* ]]; then
        url_grep=$(grep Endpoint /etc/wireguard/*.conf | awk -F'=' '{print $2}' | awk -F# '{gsub(/ /,"");print ($1) }' | awk -F ':' '{print $1}')
elif [[ $iface == "tun"* ]]; then
        url_grep=$(grep -i remote /etc/openvpn/*.conf | grep -vE 'cert|-random' |awk -F 'remote' '{print$2}' |awk '{print $1}' | head -1)
fi
### Sets ###
dns_ip=1.1.1.1
dns_check_ping=1.0.0.1
route_default=$(grep default $default_path/route_default | grep default)
route_ip=$(grep default $default_path/route_default | awk '/default/ {print $3}')
route_dev=$(grep default $default_path/route_default | awk '/default/ {print $5}')
while true ; do
### interface check ###
check_vpn=$(ip -o link show | awk -F': ' '{print $2}' | grep -E  'wg|tun')
data_check=$check_vpn
if  [ -n "$check_vpn" ]; then
echo "//check_vpn $check_vpn"
echo "//check_vpn $check_vpn"
### add default route
      add_default=$(ip route show default | grep default)
      if  [ -z "$add_default" ]; then
        ip route add default via "$route_ip" dev "$route_dev"
        echo "//add_default "$route_ip" dev "$route_dev""
      fi
### check connect ###
      ping_check=$(ping -c 2 -I $data_check "$dns_check_ping" | grep time)
      if  [ -n "$ping_check" ]; then
        echo "//ping_check ok"
### lookup SRV IP ###
                if [[ $url_grep =~ ^[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
                dns_v4=$url_grep
                echo "//dns_v4"
                else
                dns_v4=$(nslookup -query=A "$url_grep" "$dns_ip" | grep Address | sed '/:53$/d' | sed s/^[^0-9]*// | head -1)
                echo "//dns_v4"
                fi
### remove backup ###
#                rem_backup_v4=$(ip route show | grep "$dns_v4" )
#                if  [ -n "$rem_backup_v4" ]; then
#                ip route del "$dns_v4"
#                echo "//rem_backup"
#                fi
        else
                echo "ping_check not OK"
                if [[ $iface == "wg"* ]]; then
                /etc/init.d/wireguard restart
                elif [[ $iface == "tun"* ]]; then
                /etc/init.d/openvpn restart
                fi
        fi

 else
### remove default route ###
                del_default=$(ip route show default | grep default)
                if  [ -n "$del_default" ]; then
                ip route del default
echo "delete default route"
                fi
### DNS Request ###
                dns_request=$(ip route show | grep "default")
                if  [ -z "$dns_request" ]; then
                ip route add "$dns_ip" via "$route_ip" dev "$route_dev"
echo "add $dns_ip"
                sleep 1
                fi
### request ipv4
                if [[ $url_grep =~ ^[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
                dns_v4=$$url_grep
                ip route del "$dns_ip"
echo "delete dns_ip $dns_ip"
                else
                dns_v4=$(nslookup -query=A "$url_grep" "$dns_ip" | grep Address | sed '/:53$/d' | sed s/^[^0-9]*// | head -1)
                ip route del "$dns_ip"
echo "delete dns_ip $dns_ip"
                fi
###  add backup route ###
                add_backup_A=$(ip route show | grep "$dns_v4")
                if  [ -z "$add_backup_A" ]; then
                ip route add "$dns_v4"  via "$route_ip" dev "$route_dev"
echo "add dns_v4"
                fi
                if [[ $iface == "wg"* ]]; then
                /etc/init.d/wireguard restart
                elif [[ $iface == "tun"* ]]; then
                /etc/init.d/openvpn stop
echo "stoping OpenVPN"
                sleep 10
#                if  [ -z "$iface" ]; then
                /etc/init.d/openvpn start
echo "starting OpenVPN"
                sleep 10
                iface_add_openvpn=$(ip -o link show | awk -F': ' '{print $2}' | grep -E  'tun')
echo "grep iface_add_route $iface_add_route"

                ip_route_openvpn=$(ip route show | grep "dev tun" | awk '{print $1}' | awk -F '/' '{print $1}' | sed 's/\.[^.]*$/./' | head -1 )
echo "request ip route $ip_route_openvpn"

                ip route add 128.0.0.0/1 via "$ip_route_openvpn"1 dev $iface_add_openvpn
echo "ip route add 128.0.0.0/1 via "$ip_route_openvpn"1 dev $iface_add_openvpn"

                ip route add 0.0.0.0/1 via "$ip_route_openvpn"1 dev $iface_add_openvpn
echo "ip route add 0.0.0.0/1 via "$ip_route_openvpn"1 dev $iface_add_openvpn"
#                fi
                sleep 5
                fi
fi
done
